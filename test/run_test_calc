#!/bin/bash

wd=`pwd`

export PATH=`dirname ${wd}`:$PATH
export LANG=C.UTF-8

nm='Zr'

echo "Calculating basic harmonic phonons"

function vasp_wait {
    oc="${1}/OSZICAR"
    echo "Running vasp"
    sleep 5
    while true ; do 
        sleep 5
        if grep -q 'F='  "${oc}" ; then 
            break
        else
            l=`tail -n 1 "${oc}"|awk '{printf("(%2s)  %12s", $2, $4)}'`
            printf '\r VASP dE: %20s' "${l}"
        fi
    done
    echo ' done'
    
}

function tdep_wait {
    for f in T_*/calc-disp_*/OSZICAR ; do
        echo -n "${f} :"
        while true ; do
            sleep 1
            if grep -q 'F=' ${f} ; then
                break
            fi
        done
        echo "done"
    done
}


mkdir -p harmonic
(cd harmonic
    ln -s ../opt/{INCAR,KPOINTS,SPOSCAR,POTCAR,vasprun.conf} .

    if [ -e ../${nm}.born ] ; then
      ln -s ../${nm}.born .
    fi

    if [ -e ../${nm}.path ] ; then
      ln -s ../${nm}.path .
    fi
    
    make-gen.py -o 1 -p $nm -n SPOSCAR -s 1.0 -b 0 > ${nm}_gen.in

    alm ${nm}_gen.in > ${nm}_gen.log
    
    displace.py --mag=0.02 --prefix=disp --VASP=SPOSCAR ${nm}.pattern_HARMONIC   
    
    if grep -s -q 'F=' calc-disp1/OSZICAR ; then
        echo "Skip DFT"
    else
        run-calcs
        vasp_wait calc-disp1
    fi
)
proc-dirs ${nm} harmonic

VOL=1.02


mkdir -p TDEP_${VOL}
(cd TDEP_${VOL}
    ln -s ../harmonic/{INCAR,KPOINTS,POTCAR,vasprun.conf} .
    ln -s ../harmonic .

    if [ -e ../${nm}.born ] ; then
      ln -s ../${nm}.born .
    fi

    if [ -e ../${nm}.path ] ; then
      ln -s ../${nm}.path .
    fi

python -c "from ase.io import read ;
c=read('../harmonic/SPOSCAR', format='vasp');
c.set_cell(${VOL}*c.get_cell(), scale_atoms=True); 
c.write('SPOSCAR', vasp5=True, direct=True)"

    make_tdep ${nm} 5 100 300 600
    tdep_wait
    
    for d in T_{100,300,600} ; do
        mv ${d} ${d}_base
    done

    proc-dirs ${nm} T_{100,300,600}_base

    make_tdep ${nm} 10 100 300 600
    tdep_wait
    proc-dirs ${nm} T_{100,300,600}
    
    plotband.py -u THz T_{100,300,600}*/${nm}.bands
    mv band_tmp.pdf bands_summary.pdf
)

